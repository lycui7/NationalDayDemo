JS对象、jQuery对象、DOM对象的区别与联系
1.DOM(文档对象模型)
①DOM实际上是以面向对象方式描述的文档模型
②DOM对象，即是我们用传统的方法(javascript)获得的对象
③通过DOM，可以访问所有的 HTML 元素，连同它们所包含的文本和属性。可以对其中的内容进行修改和删除，同时也可以创建新的元素
2.JS对象
①JavaScript 提供多个内建对象，比如 String、Date、Array 等等
②对象只是带有属性和方法的特殊数据类型
③通过js获取的DOM对象就是js对象
3.jQuery对象
①jQuery对象其实是一个JavaScript的数组,这个数组对象包含125个方法和4个属性
            4个属性分别是     jquery              当前的jquery框架版本号
                              length              指示该数组对象的元素个数 .
                              context             一般情况下都是指向HtmlDocument对象 .
                              selector             传递进来的选择器内容
②jquery对象就是通过jQuery包装DOM对象后产生的对象

重点一：js对象与jQuery对象互相转化
js -> jquery :  $(js对象)
jquery -> js : ①var doc2=$("#idDoc2")[0]    ②var doc2=$("#idDoc2").get(0)

重点二：获得/改变 内容与属性（对比js与jquery）
①属性Attribute
    [object HTMLInputElement].setAttribute("属性名"，"属性值")
                             .removeAttribute("属性名")
                             .getAttribute("属性名")
    [object Object].attr() //设置或获得值
                   .removeAttr("属性名") //移除属性名

②表单字段的值value
    [object HTMLInputElement].value //获取值
                             .value="..." //设置值
     [object Object].val() //设置或获得值

③设置或返回所选元素的文本内容
    [object HTMLInputElement].innerText
    [object Object].text()
④设置或返回所选元素的内容（包括 HTML 标记）
    [object HTMLInputElement].innerHtml
    [object Object].html()
⑤设置或返回被选元素的一个或多个样式属性
    [object HTMLInputElement].style.backgroundColor = "red" //在js中，css的属性名用连接符的地方，改为将后面的第一个字母大写
    [object Object].css({"background-color":"yellow","font-size":"200%"})

重点三：对元素节点的操作（建议使用Jquery,不要考虑js了，JS添加删除节点的操作太麻烦了）
    例如 (js的写法)              var para=document.createElement("p");
                                 var node=document.createTextNode("这是新段落。");
                                 para.appendChild(node);
                                 var element=document.getElementById("div1");
                                 element.appendChild(para);
                      -----------------------------------------------------------------
    (jquery一行搞定了！！！) ->   $("div").append("<p>新段落</p>");

重点4：
1. 添加DOM元素  append   prepend   before  after
   append():    在被选元素的结尾（仍然在内部）插入指定内容
   prepend():   在被选元素的开头（仍位于内部）插入指定内容
   before():    在被选元素前插入指定的内容
   after():     在被选元素后插入指定的内容
2.删除DOM元素   remove   empty
    remove():   移除被选元素，包括所有文本和子节点
    empty():    从被选元素移除所有内容，包括所有文本和子节点